define postfix::config ($ensure = present, $value, $nonstandard = false) {
   case $ensure {
      present: {
         exec {"postconf -e ${name}='${value}'":
            unless  => $nonstandard ? {
            false => "test x$(postconf -h ${name}) == 'x${value}'",
            true  => "test x$(egrep '^${name} ' /etc/postfix/main.cf | cut -d= -f2 | cut -d' ' -f2) == 'x${value}'",
            },
            notify  => Service["postfix"],
            require => File["/etc/postfix/main.cf"],
         }
      }

      absent: {
         fail "postfix::config ensure => absent: Not implemented"
      }
   }
}


00000000000000000000000000000000000000000000000000000000000000000000000000000000
switching the puppet master to puppet1001 for puppet10002
00000000000000000000000000000000000000000000000000000000000000000000000000000000

on puppet10002
   sudo /etc/init.d/httpd stop
   sudo /etc/init.d/puppetdb stop
   cd /var/lib/puppet/ssl
   sudo rm -rf ssl
   mkdir -p ssl/ca/private

   ....


on puppet1001 
   sudo scp $(puppet master --configprint ssldir)/ca/ca_key.pem puppet10002.bos.netledger.com:/var/lib/puppet/ssl/ca/
   sudo scp $(puppet master --configprint ssldir)/ca/inventory.txt puppet10002.bos.netledger.com:/var/lib/puppet/ssl/ca/
   sudo scp $(puppet master --configprint ssldir)/ca/private/ca.pass puppet10002.bos.netledger.com:/var/lib/puppet/ssl/ca/private/
   sudo scp $(puppet master --configprint ssldir)/ca/ca_crt.pem puppet10002.bos.netledger.com:/var/lib/puppet/ssl/ca/
   sudo scp $(puppet master --configprint ssldir)/ca/ca_crl.pem puppet10002.bos.netledger.com:/var/lib/puppet/ssl/ca/
   sudo scp $(puppet master --configprint ssldir)/ca/ca_pub.pem puppet10002.bos.netledger.com:/var/lib/puppet/ssl/ca/
   sudo scp $(puppet master --configprint ssldir)/ca/serial puppet10002.bos.netledger.com:/var/lib/puppet/ssl/ca/
   sudo scp $(puppet master --configprint ssldir)/ca/ca_crt.pem puppet10002.bos.netledger.com:/etc/puppetdb/ssl/ca.pem
   sudo scp $(puppet master --configprint ssldir)/private_keys/puppet10002.bos.netledger.com.pem puppet10002.bos.netledger.com:/etc/puppetdb/ssl/private.pem
   sudo scp $(puppet master --configprint ssldir)/certs/puppet10002.bos.netledger.com.pem puppet10002.bos.netledger.com:/etc/puppetdb/ssl/public.pem



on puppet10002
   puppet master --no-daemonize --verbose

   cd /var/lib/puppet/
   sudo chown  -r puppet ssl

   cd /etc/puppetdb/ssl/
   sudo chown  -r puppetdb *

   sudo /etc/init.d/puppetdb start
   sudo /etc/init.d/httpd start

   

00000000000000000000000000000000000000000000000000000000000000000000000000000000



curl -G -H "Accept: application/json" 'http://localhost:8080/v2/facts' --data-urlencode 'query=["=", "name", "operatingsystem"]'
curl -G -H "Accept: application/json" 'http://localhost:8080/v2/facts' --data-urlencode 'query=["and",["=","certname","beta-weed10001.bos.netledger.com"],["=","name","uptime_hours"]]'



